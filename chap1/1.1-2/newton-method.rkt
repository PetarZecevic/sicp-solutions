#lang racket
(define (abs x)
  (if (< x 0)
      (- x)
      x))
(define (square x) (* x x))
(define (<= x y)
  (not (> x y)))
(define (good-enough? guess x)
  (<= (abs (- (square guess) x)) 0.001))
(define (average x y)
  (/ (+ x y) 2))
(define (improve guess x)
  (average guess (/ x guess)))
(define (square-iter guess x)
  (if (good-enough? guess x)
      guess
      (square-iter (improve guess x) x)))
(define (sqrt x)
  (square-iter 1.0 x))